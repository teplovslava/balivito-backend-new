// üìÅ scripts/initSystemUser.js
import fs from "fs";
import path from "path";
import bcrypt from "bcrypt";
import User from "../models/User.js";

export async function ensureSystemUser() {
  const SYSTEM_EMAIL = "balivito@gmail.com";
  const ENV_PATH = path.resolve(process.cwd(), ".env");

  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ email
  const existing = await User.findOne({ email: SYSTEM_EMAIL });
  if (existing) {
    console.log("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–ø–æ email):", existing._id);

    // üîÅ –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø–∏—Å–∞—Ç—å –≤ .env, –µ—Å–ª–∏ –µ–≥–æ –µ—â—ë –Ω–µ—Ç
    try {
      if (!fs.existsSync(ENV_PATH)) {
        fs.writeFileSync(ENV_PATH, `SYSTEM_USER_ID=${existing._id}\n`, "utf-8");
        console.log("üìÑ .env —Å–æ–∑–¥–∞–Ω –∏ SYSTEM_USER_ID –¥–æ–±–∞–≤–ª–µ–Ω");
      } else {
        const envContent = fs.readFileSync(ENV_PATH, "utf-8");
        if (!envContent.includes("SYSTEM_USER_ID=")) {
          fs.appendFileSync(ENV_PATH, `\nSYSTEM_USER_ID=${existing._id}\n`, "utf-8");
          console.log("üìÑ SYSTEM_USER_ID –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env");
        }
      }
    } catch (err) {
      console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .env:", err.message);
    }

    return;
  }

  // 2. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const rawPassword = "system_secret_" + Date.now();
  const hashedPassword = await bcrypt.hash(rawPassword, 10);

  const systemUser = await User.create({
    name: "–°–∏—Å—Ç–µ–º–∞",
    email: SYSTEM_EMAIL,
    password: hashedPassword,
    isVerified: true,
  });

  console.log("‚úÖ –°–æ–∑–¥–∞–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", systemUser._id);
  console.log("üîê –ü–∞—Ä–æ–ª—å (–æ—Ç–ª–∞–¥–∫–∞):", rawPassword);

  // 3. –î–æ–±–∞–≤–ª—è–µ–º SYSTEM_USER_ID –≤ .env
  try {
    if (!fs.existsSync(ENV_PATH)) {
      fs.writeFileSync(ENV_PATH, `SYSTEM_USER_ID=${systemUser._id}\n`, "utf-8");
      console.log("üìÑ .env —Å–æ–∑–¥–∞–Ω —Å SYSTEM_USER_ID");
    } else {
      const envContent = fs.readFileSync(ENV_PATH, "utf-8");
      if (!envContent.includes("SYSTEM_USER_ID=")) {
        fs.appendFileSync(ENV_PATH, `\nSYSTEM_USER_ID=${systemUser._id}\n`, "utf-8");
        console.log("üìÑ SYSTEM_USER_ID –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env");
      }
    }
  } catch (err) {
    console.warn("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å .env:", err.message);
  }
}
