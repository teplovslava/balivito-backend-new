name: CI & CD

on:
  push:
    branches: [master]

permissions:
  contents: read
  packages: write

env:
  REGISTRY_IMAGE: ghcr.io/teplovslava/balivito-backend-new:latest


jobs:
  # ─────────────────────────────── CI ─────────────────────────────── #
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_IMAGE }}
          build-args: |
            PORT=${{ vars.PORT }}

  # ─────────────────────────────── CD ─────────────────────────────── #
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        env:
          SSH_HOST:       ${{ secrets.SSH_HOST }}
          SSH_USER:       ${{ secrets.SSH_USER }}
          SSH_KEY:        ${{ secrets.SSH_KEY }}
          GHCR_PAT:       ${{ secrets.GHCR_PAT }}
          PORT:           ${{ vars.PORT }}
          MONGODB_URI:    ${{ vars.MONGODB_URI }}
          JWT_SECRET:     ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ vars.JWT_EXPIRES_IN }}
          SITE_URL:       ${{ vars.SITE_URL }}
          MAIL_ADDRESS:   ${{ vars.MAIL_ADDRESS }}
          MAIL_PASSWORD:  ${{ secrets.MAIL_PASSWORD }}
        with:
          host:     ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key:      ${{ env.SSH_KEY }}
          script: |
            set -e
            cd /opt/stack/balivito-backend-new

            SITE_URL="http://${SSH_HOST}:${PORT}"

            # создаём .env прямо в нужной директории
            cat > .env <<EOF
            PORT=$PORT
            MONGODB_URI=$MONGODB_URI
            JWT_SECRET=$JWT_SECRET
            JWT_EXPIRES_IN=$JWT_EXPIRES_IN
            SITE_URL=$SITE_URL
            MAIL_ADDRESS=$MAIL_ADDRESS
            MAIL_PASSWORD=$MAIL_PASSWORD
            EOF

            docker pull ${{ env.REGISTRY_IMAGE }}
            docker compose up -d --pull=always --remove-orphans
