name: CI & CD

on:
  push:
    branches: [master]

permissions:
  contents: read
  packages: write

env:
  REGISTRY_IMAGE: ghcr.io/teplovslava/balivito-backend-new:latest

jobs:
  # ─────────────────────────────── CI ─────────────────────────────── #
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_IMAGE }}
          build-args: |
            PORT=${{ vars.PORT }}

  # ─────────────────────────────── CD ─────────────────────────────── #
  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      SSH_HOST:       ${{ secrets.SSH_HOST }}
      SSH_USER:       ${{ secrets.SSH_USER }}
      SSH_KEY:        ${{ secrets.SSH_KEY }}
      GHCR_PAT:       ${{ secrets.GHCR_PAT }}
      PORT:           ${{ vars.PORT }}
      MONGODB_URI:    ${{ vars.MONGODB_URI }}
      JWT_SECRET:     ${{ secrets.JWT_SECRET }}
      JWT_EXPIRES_IN: ${{ vars.JWT_EXPIRES_IN }}
      MAIL_ADDRESS:   ${{ vars.MAIL_ADDRESS }}
      MAIL_PASSWORD:  ${{ secrets.MAIL_PASSWORD }}
      GITHUB_ACTOR:   ${{ github.actor }}

    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          envs: PORT,SSH_HOST,MONGODB_URI,JWT_SECRET,JWT_EXPIRES_IN,MAIL_ADDRESS,MAIL_PASSWORD,GHCR_PAT,GITHUB_ACTOR

          script: |
            set -e

            echo "📁 Переход в директорию проекта"
            cd /opt/stack/balivito-backend-new

            echo "🔍 Отладка переменных окружения:"
            echo "SSH_HOST=$SSH_HOST"
            echo "PORT=$PORT"
            echo "MONGODB_URI=$MONGODB_URI"
            echo "JWT_SECRET=$JWT_SECRET"
            echo "JWT_EXPIRES_IN=$JWT_EXPIRES_IN"
            echo "MAIL_ADDRESS=$MAIL_ADDRESS"
            echo "MAIL_PASSWORD=$MAIL_PASSWORD"

            SITE_URL="http://${SSH_HOST}:${PORT}"
            echo "👉 Сформирован SITE_URL=$SITE_URL"

            echo "✍️ Создание .env-файла:"
            cat > .env <<EOF
            PORT=$PORT
            MONGODB_URI=$MONGODB_URI
            JWT_SECRET=$JWT_SECRET
            JWT_EXPIRES_IN=$JWT_EXPIRES_IN
            SITE_URL=$SITE_URL
            MAIL_ADDRESS=$MAIL_ADDRESS
            MAIL_PASSWORD=$MAIL_PASSWORD
            EOF

            echo "🐳 Логинимся в GitHub Container Registry"
            echo "$GHCR_PAT" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin || true

            echo "⬇️ Тянем новый образ"
            docker pull ${{ env.REGISTRY_IMAGE }}

            echo "🚀 Запускаем контейнеры"
            docker compose up -d --pull=always --remove-orphans

            echo "✅ Деплой завершён!"
