name: CI & CD

on:
  push:
    branches: [master]           # деплой только из main

permissions:
  contents: read
  packages: write              # нужно, чтобы заливать в GHCR

env:                            # единственное место меняется автоматически
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}:latest

jobs:
# ─────────────────────────────── CI ─────────────────────────────── #
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3        # логин в ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5   # build → push
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY_IMAGE }}

# ─────────────────────────────── CD ─────────────────────────────── #
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1
        env:                                # передаём секреты внутрь ssh
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd /opt/stack                   # папка с docker-compose.yml

            # 1) обновляем/создаём .env из секретов GitHub
            cat > .env <<EOF
            MONGO_URI=$MONGO_URI
            JWT_SECRET=$JWT_SECRET
            EOF

            # 2) стягиваем новый образ и перезапускаем стэк
            docker pull ${{ env.REGISTRY_IMAGE }}
            docker compose up -d --pull=always --remove-orphans
